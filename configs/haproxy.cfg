#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/2.8/doc/configuration.txt
#   https://cbonte.github.io/haproxy-dconv/2.8/configuration.html
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2
    log stdout format raw local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    # daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
    # option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          30m
    timeout server          30m
    timeout http-keep-alive 10s
    timeout check           10s

    # never fail on address resolution
	default-server          init-addr none

#---------------------------------------------------------------------
# example how to define user and enable Data Plane API on tcp/5555
# more information: https://github.com/haproxytech/dataplaneapi and
#   https://www.haproxy.com/documentation/hapee/2-0r1/configuration/dataplaneapi/
#---------------------------------------------------------------------
# userlist haproxy-dataplaneapi
#     user admin insecure-password mypassword

# program api
#    command /usr/bin/dataplaneapi --host 0.0.0.0 --port 5555 --haproxy-bin /usr/sbin/haproxy --config-file /usr/local/etc/haproxy/haproxy.cfg --reload-cmd "kill -SIGUSR2 1" --restart-cmd "kill -SIGUSR2 1" --reload-delay 5 --userlist hapee-dataplaneapi
#    no option start-on-reload

#---------------------------------------------------------------------
# HAProxy Stats
#---------------------------------------------------------------------
listen stats
    mode http
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 15s
    stats show-node
    stats show-legends
    stats show-desc
    stats admin if TRUE

#---------------------------------------------------------------------
# Docker DNS Resolver
#---------------------------------------------------------------------
resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      5s
    hold refused    5s
    hold nx         5s
    hold timeout    5s
    hold valid      5s
    hold obsolete   5s

#---------------------------------------------------------------------
# Redis
#---------------------------------------------------------------------
listen redis-primary
    bind *:6379
    mode tcp
    balance first
    option tcp-check

    tcp-check connect
    tcp-check send AUTH\ {{ secret "REDISWARM_SECRET" }}\r\n
    tcp-check expect string +OK
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK

    option allbackups
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server-template replica- 1-5 tasks.replica:6379 maxconn 1024 check resolvers docker resolve-prefer ipv4 init-addr libc,none


listen redis-replicas
    bind *:6380
    mode tcp
    balance leastconn
    option tcp-check

    tcp-check connect
    tcp-check send AUTH\ {{ secret "REDISWARM_SECRET" }}\r\n
    tcp-check expect string +OK
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send QUIT\r\n
    tcp-check expect string +OK

    option allbackups
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server-template replica- 1-5 tasks.replica:6379 maxconn 1024 check resolvers docker resolve-prefer ipv4 init-addr libc,none
