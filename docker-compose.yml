networks:
  rediswarm:

volumes:
  rediswarm:
  rediswarm-state:

configs:
  redis.conf.template:
    file: configs/redis.conf.template
  sentinel.conf.template:
    file: configs/sentinel.conf.template
  haproxy.cfg:
    template_driver: golang
    file: configs/haproxy.cfg

services:
  loadbalancer:
    image: haproxytech/haproxy-alpine:latest
    environment:
      - REDIS_SWARM_SECRET=${REDIS_MASTER_AUTH:-redis-swarm}
    networks:
      - rediswarm
    ports:
      - "8404:8404"
      - "6379:6379"
      - "6380:6380"
    configs:
      - source: haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg

  rediswarm:
    image: rediswarm/rediswarm:dev
    hostname: rediswarm-{{.Task.Slot}}
    environment:
      - REDIS_SWARM_SLOT={{.Task.Slot}}
      - REDIS_SWARM_SECRET=${REDIS_MASTER_AUTH:-redis-swarm}
      - REDIS_HOSTNAME_PREFIX=${REDIS_HOSTNAME_PREFIX:-rediswarm-}
    networks:
      - rediswarm
    configs:
      - source: redis.conf.template
        target: /etc/redis/templates/redis.conf.template
      - source: sentinel.conf.template
        target: /etc/redis/templates/sentinel.conf.template
    volumes:
      - rediswarm:/data
      - rediswarm-state:/etc/redis/config
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 60s
        max_failure_ratio: 0.3
